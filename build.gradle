plugins {
    id 'java'
    id 'io.freefair.lombok' version '8.10.2'
    id 'io.qameta.allure' version '2.12.0'
}

def selenideVersion = "7.6.1",
    junitVersion = "5.11.3",
    allureVersion = "2.29.0",
    allureAdapterVersion = "2.29.0",
    allureSelenideVersion = "2.29.0",
    slf4jVersion = "2.0.16"

allure {
    report {
        version.set("$allureVersion")
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("$allureAdapterVersion")
            }
        }
    }
}

repositories {
    mavenCentral()
}

compileTestJava {
    options.encoding = 'UTF-8'
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "io.qameta.allure:allure-selenide:$allureSelenideVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.aeonbits.owner:owner:1.0.4"
    )
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    systemProperties(System.getProperties())
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task smoke_tests(type: Test) {
    useJUnitPlatform {
        includeTags("smoke")
    }
}

task regression_tests(type: Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())
}